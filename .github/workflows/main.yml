name: All Builds (Linux, macOS, Windows, Android APK)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  desktop-builds:
    name: Build Executables (Windows, macOS, Linux)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build Executable
        run: |
          pyinstaller --onefile main.py

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}
          path: dist/

  android-build:
    name: Build APK for Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker for Buildozer
        run: |
          sudo apt update
          sudo apt install -y git zip unzip openjdk-11-jdk python3-pip

      - name: Install Buildozer Docker Image
        run: |
          pip install buildozer
          sudo apt install -y libtool zip unzip openjdk-11-jdk
          sudo apt install -y python3-pip python3-setuptools python3-wheel
          sudo apt install -y cython

      - name: Build APK
        run: |
          sudo apt install -y git build-essential ccache autoconf automake libtool pkg-config zlib1g-dev
          pip install Cython
          pip install --user --upgrade buildozer
          buildozer android debug

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: bin/*.apk
